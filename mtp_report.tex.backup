\documentclass[11pt,a4paper]{report}

\usepackage{float}
\usepackage{booktabs}
\usepackage[margin=0.9in]{geometry}
\usepackage[moderate]{savetrees}
\usepackage{graphicx}
\usepackage{enumitem}
%\usepackage{titlesec}
\usepackage[svgnames]{xcolor}
\usepackage[colorlinks=true, linkcolor=blue, urlcolor=blue, citecolor=red]{hyperref}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{amssymb}
\usepackage{pifont}
\usepackage{array}
\usepackage{amsmath}
\usepackage[titletoc]{appendix}

% Referencing macros
\newcommand{\Eqref}[1]{Equation~\eqref{#1}}
\newcommand{\Tabref}[1]{Table~\ref{#1}}
\newcommand{\Figref}[1]{Figure~\ref{#1}}
\newcommand{\Appref}[1]{Appendix~\ref{#1}}
\newcommand{\putiitblogo}{\includegraphics[width=10em]{iitb-black}}
\newcommand{\cmark}{\ding{51}}%
\newcommand{\xmark}{\ding{55}}%
\newcolumntype{P}[1]{>{\centering\arraybackslash}p{#1}}

\newcommand{\cg}{Cgroups}
\newcommand{\dd}{Double-decker}
\newcommand{\sol}{soft-limit}
\newcommand{\redis}{Redis}
\newcommand{\hl}{hard-limit}
\newcommand{\mongo}{MongoDB}
\newcommand{\mongodb}{MongoDB}
\newcommand{\tmem}{T-Mem}

%\newcommand{\myparagraph}[1]{\paragraph{#1}\mbox{}\newline}
\newcommand{\myparagraph}[1]{\paragraph{#1}\mbox{}\\}

% Table of contents display
\setcounter{tocdepth}{2}
\setcounter{secnumdepth}{2}

% Formatting
%\titleformat{\chapter}{\normalfont\huge\bf}{\thechapter.}{20pt}{\huge\bf}
\linespread{1.05}
\setlength{\parindent}{2em}
\setlength{\parskip}{0.3em}
\setitemize[0]{leftmargin=2em,itemindent=0.5em}

\setlist[enumerate]{itemsep=0mm}
\setlist[itemize]{itemsep=0mm}
\setlist[enumerate]{nosep}
\setlist[itemize]{nosep}

\begin{document}

  % Coverpage
  \begin{titlepage}    
    \begin{center}
   
      \Large \textbf{Adapative memory management frameworks \\for derivative clouds}  \\
      \vspace{5em}
      
      \large \textbf{Master's Thesis Report} \\
      \vspace{5em}
      
      \normalsize A thesis \\submitted in partial fulfillment of the \\requirements for the degree of \\
      \vspace{1em}      
      \large \textbf{Master of Technology} \\
      \vspace{5em}
      
      \normalsize by \\
      \vspace{1em}      
      \large \textbf{Prashanth} \\ 
      \vspace{0.5em}
      \normalsize Roll No: 153050095 \\
      
      \vspace{5em}
      \normalsize under the guidance of \\
      \vspace{0.5em}      
      \large \textbf{Prof. Purushottam Kulkarni} \\
      \vspace{3em}
      
      \putiitblogo \\
      \Large 
      Department of Computer Science and Engineering \\
      Indian Institute of Technology, Bombay \\
      Mumbai
      
    \end{center}
  \end{titlepage} 
  
  \begin{center}
    \huge \textbf{Abstract}
  \end{center}
  \vspace*{3em}
  \normalsize 
    
    Derivative clouds---nesting of virtualization entities to provision cloud platforms, has gained popularity 
    with the emergence of container based virtualization techniques. Several large cloud providers \cite{gcp, heroku, sapcp} have
    have adopted derivative clouds by provisioning containers within virtual machines to provide cloud services to their 
    customers. 
    
    As a part of our initial work, we have made an attempt to understand memory management in containers in an native(non-nested)
    and derivative cloud setup. We had identified drawbacks in the memory management controller provided by Linux, and proposed
    updates to the existing controller and evaluated the same. Our controller was able to differentially provision memory as
    a resource among several container executing both in an native and derivative setup. The effects of such differentially 
    provisioned containers were observable in their application throughputs.
    
    We then moved onto analyzing cache partitioning frameworks and how they impact in achieving application performance 
    objectives (SLAs). We identified that existing cache partitioning frameworks had no support for derivative clouds and
    hence made changes to it to support derivative clouds. However we established that mere cache partitioning frameworks fail
    to support applications have in-VM memory requirements. Hence we moved to a decentralized memory management framework that
    supports provisioning both memory and cache as a resource at the derivative provider. 

    
  
  . 
    
    \newpage
    \begin{center}
      \huge \textbf{Acknowledgements}
    \end{center}
    \vspace*{3em}
    \normalsize 
    
    I would like to thank my advisor Prof. Purushottam Kulkarni for his constant support and advice which has helped me take 
    this thesis to itâ€™s completion. I would also like to thank Prof. Umesh Bellur for his guidance during the Phase-1 of my 
    M.Tech. thesis project. Lastly, I would like to thank Debadatta Mishra and Chandra Prakash with whom I have collaborated by 
    research works with for being as supportive as possible.
    
    \vspace*{2em}
    \noindent Prashanth
    
    
  \pagenumbering{roman}
  \tableofcontents
  \listoffigures
  \listoftables
  \cleardoublepage
  \setcounter{page}{1}
  \pagenumbering{arabic}
  \setlength{\parskip}{1em}
  
  \include{1_intro/introduction}  
  \include{2_background/background} 
  \include{3_related_work/related_work}
  \include{4_controller/controller}
  \include{5_double_decker/dd}
  \include{6_conclusions/conclusions}
  \include{7_future_work/future_work}
  
  \bibliographystyle{ieeetr}
  \bibliography{mylit}  
  
  \appendix
  %\include{8/source_code}
  %\include{appendix/benchmarks}
  \begin{appendices}
    \chapter{\dd{} source code}
      The complete source code for \dd{} is available at \url{https://github.com/kvmprashanth/double_decker}.
      
      \dd{} is implemented as an loadable kernel module. To know the complete procedure for setting up double decker on
      a Linux machine, kindly follow the steps provided in the README.md in the given above link.
    
  \end{appendices}

\end{document}

%%% Local Variables: 
%%% mode: latex
%%% TeX-master: t
%%% End: 
