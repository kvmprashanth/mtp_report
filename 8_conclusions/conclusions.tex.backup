
\chapter{Conclusions}
  
    We have made an initial attempt to understand memory management in Linux containers. We started off with purposing 
hypotheses based on theoretical evidences. We performed empirical analysis to verify the correctness of our purposed hypotheses. We 
also performed a few more empirical analysis to establish parts of memory management for which hypotheses couldn't be drawn. We then 
tried to extrapolate its implications in the real world applications running inside a derivative cloud environment. These implications 
strongly suggested that existing memory management techniques may impact higher provisioned containers negatively, when the system is under 
memory pressure. We conclude by purposing the requirements of a new desired policy that provides this notion of a differentiated 
reclamation to enforce deterministic allocation when the system is under memory pressure.  
  
  \section{Future Work}
  
    The following are the list of works that are to be taken up in the near future,
    
      \begin{enumerate}
	\item Design and implement a new memory management policy for containers.
	\item Analyze memory hierarchy in cgroups, and see how this affects containers.
	\item Explore other resource controller in the container framework, identify issues and provide appropriate fixes.
	\item The end goal is to provide an adaptive resource provisioning framework for containers. 
      \end{enumerate}

  
